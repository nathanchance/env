# Maintainer: Nathan Chancellor <nathan@kernel.org>
# Contributor: Jan Alexander Steffens (heftig) <heftig@archlinux.org>

_localversion=-llvm
pkgname=linux-next$_localversion
_srctag=next-20220506
pkgver=${_srctag//-/.}
pkgrel=1
pkgdesc='linux-next'
url="https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git/log/?h=$_srctag"
arch=(x86_64)
license=(GPL2)
makedepends=(
  bc libelf pahole cpio perl tar xz
)
options=('!strip')
source=(
  "$pkgname::git+https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git?signed#tag=$_srctag"
  config
  0001-fixup-mm-shmem-convert-shmem_swapin_page-to-shmem_sw.patch
  0002-fixup-mm-shmem-turn-shmem_alloc_page-into-shmem_allo.patch
  0003-drm-amdgpu-gfx11-Add-missing-break.patch
  0004-drm-amdgpu-gfx10-Avoid-uninitialised-variable-index.patch
  0005-drm-amdgpu-gfx11-Avoid-uninitialised-variable-index.patch
  0006-nvme-Ensure-ret-is-always-initialized-in-nvme_ns_hea.patch
  0007-drm-i915-fix-null-pointer-dereference.patch
)

validpgpkeys=(
  '985B681FA45919699753A26489F91C0A41D5C07A'  # Stephen Rothwell
  '3F2568AAC26998F9E813A1C5C3F436CA30F5D8EB'  # Mark Brown
)
sha256sums=('SKIP'
            '49c5f566fc6eedda56652e5205e1fa9396b3e8d0324ebc396a15c955e3e96b17'
            'fda90e52923ac8069644f8e8404082e8c72c5d96ec0bb6dd1fd1c4904550a5dd'
            '1e6909a5af8a07e1569302e4caa2477cd3852b0444f324136a72558cfa99b806'
            '287efd06e90d0bef986bf642c3d489b805d8b762c0b9ea3dd4208da7b364b979'
            '8f060e7dd51a9efd7df51500c7d5169d312e17a19788d07e723b14905b04a9f8'
            'e0dddfbf5d7b0fd373f546f9b88231e81d194ef33a217b25fae67b5d53a46f55'
            '80e0e532af23f75b13257732e0c371e82185c372d47d332da1727710b165b2bc'
            'd5a7bd20f24ae81b5ce67d687bd73796ae4d670a05982bea3c0a382f8909e5f2')

# This obviously ties this PKGBUILD to my machine but that is kind of the point :)
_kmake() {
  set -x
  make -skj"$(nproc)" HOSTLDFLAGS=-fuse-ld=lld LLVM=${LLVM:-$CBL_TC_BIN/} "$@"
  set +x
}

prepare() {
  cd $pkgname

  echo "Setting version..."
  scripts/setlocalversion --save-scmversion
  echo "${_localversion}" > localversion.10-pkgname

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done

  echo "Setting config..."
  cp ../config .config
  _kmake olddefconfig
  diff -u ../config .config || :

  _kmake -s kernelrelease > version
  echo "Prepared $pkgbase version $(<version)"
}

build() {
  cd $pkgname
  _kmake all
}

package() {
  pkgdesc="The $pkgdesc kernel and modules"
  depends=(coreutils kmod initramfs)
  optdepends=('crda: to set the correct wireless channels of your country'
              'linux-firmware: firmware images needed for some devices')
  provides=(VIRTUALBOX-GUEST-MODULES WIREGUARD-MODULE)
  replaces=(virtualbox-guest-modules-arch wireguard-arch)

  cd $pkgname
  local kernver="$(<version)"
  local modulesdir="$pkgdir/usr/lib/modules/$kernver"

  echo "Installing boot image..."
  # systemd expects to find the kernel here to allow hibernation
  # https://github.com/systemd/systemd/commit/edda44605f06a41fb86b7ab8128dcf99161d2344
  install -Dm644 "$(make -s image_name)" "$modulesdir/vmlinuz"

  # Used by mkinitcpio to name the kernel
  echo "$pkgbase" | install -Dm644 /dev/stdin "$modulesdir/pkgbase"

  echo "Installing modules..."
  _kmake INSTALL_MOD_PATH="$pkgdir/usr" INSTALL_MOD_STRIP=1 \
    DEPMOD=/doesnt/exist modules_install  # Suppress depmod

  # remove build and source links
  rm "$modulesdir"/{source,build}
}

# vim:set ts=8 sts=2 sw=2 et:
