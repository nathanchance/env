#!/usr/bin/env bash
# SPDX-License-Identifier: GPL-3.0-or-later
#
# Shebang is purely for syntax highlighting and shellcheck auditing; script must be sourced to be useful
#
# Copyright (C) 2019-2021 Nathan Chancellor
#
# Generic workstation environment setup script (usually for something like Vultr or Packet)
#
# Install zsh before hand and use 'chsh -s /bin/zsh $(whoami)'

function bootstrap() { (
    source <(curl -LSs https://github.com/nathanchance/scripts/raw/main/common) &>/dev/null || exit ${?}
    source <(curl -LSs https://github.com/nathanchance/scripts/raw/main/env/stubs/folders) &>/dev/null || exit ${?}

    # Get list of packages to be installed
    # Debian/Ubuntu
    if command -v apt &>/dev/null; then
        PACKAGES=(
            bison
            build-essential
            ca-certificates
            clang
            clang-format
            cmake
            creduce
            curl
            devscripts
            doxygen
            expect
            fakeroot
            file
            flex
            gcc
            gcc-multilib
            gettext
            git
            g++
            jq
            libauthen-sasl-perl
            libclang-dev
            libcurl4-openssl-dev
            libedit-dev
            libelf-dev
            libemail-valid-perl
            libevent-dev
            libexpat1-dev
            libglib2.0-dev
            libgmp-dev
            libio-socket-ssl-perl
            libmailtools-perl
            libmpc-dev
            libmpfr-dev
            libncurses-dev
            libnet-smtp-ssl-perl
            libpcre2-dev
            libpixman-1-dev
            libssl-dev
            lld
            llvm
            llvm-dev
            locales
            make
            mosh
            most
            neofetch
            ninja-build
            pkg-config
            psmisc
            python2.7
            python3
            python3-dev
            python3-pip
            ruby-dev
            swig
            texinfo
            tcl
            tmux
            u-boot-tools
            unifdef
            unzip
            vim
            zip
            zlib1g-dev
            zsh
            zstd
        )

        # If we are root, install sudo so that we don't need a separate set of
        # commands whether we are root or a regular user
        if [[ $(id -u) -eq 0 ]]; then
            apt update || exit ${?}
            apt install -y sudo || exit ${?}
        fi

        sudo apt update || exit ${?}
        sudo DEBIAN_FRONTEND=noninteractive apt upgrade -y || exit ${?}
        sudo DEBIAN_FRONTEND=noninteractive apt install -y "${PACKAGES[@]}" || exit ${?}
        sudo DEBIAN_FRONTEND=noninteractive apt install -y python-is-python3 2>/dev/null
        echo "locales locales/default_environment_locale select en_US.UTF-8" | sudo debconf-set-selections
        echo "locales locales/locales_to_be_generated multiselect en_US.UTF-8 UTF-8" | sudo debconf-set-selections
        sudo rm "/etc/locale.gen"
        sudo dpkg-reconfigure --frontend noninteractive locales
    fi

    SCRIPTS=${GITHUB_FOLDER}/scripts
    mkdir -p "${GITHUB_FOLDER}"
    [[ -d ${SCRIPTS} ]] || { git clone https://github.com/nathanchance/scripts "${SCRIPTS}" || die "Error cloning scripts!"; }
    git -C "${SCRIPTS}" pull --rebase || die "Error updating script!"
    source <(cat "${SCRIPTS}"/env/common)
    source "${SCRIPTS}"/env/stubs/zsh && setup_zsh_env
    source "${SCRIPTS}"/env/stubs/setup && global_gitignore
    SCRIPTS_FOLDER=${SCRIPTS} rbld_usr || exit ${?}
    path_push "${HOME}/usr/bin"
    source "${SCRIPTS}"/env/stubs/git && git_setup
    zsh "${SCRIPTS}"/configs/common/vim/vim_setup.sh
    ln -fs "${SCRIPTS}"/configs/workstation/.tmux.conf "${HOME}"/.tmux.conf
); }

function rbld_usr() { (
    source "${SCRIPTS_FOLDER:?}"/env/stubs/updbin || die "Cannot source updbin"
    rm -rf "${HOME:?}"/usr
    updbin || die "updbin failed"
    iandroidtools || die "iandroidtools failed"
); }

function generic_setup() { true; }
# vi: filetype=zsh
