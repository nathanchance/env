#!/usr/bin/env zsh

# Create and configure global .gitignore
function global_gitignore() { (
    git config --global core.excludesfile "${HOME}"/.gitignore_global
    curl -LSso "${HOME}"/.gitignore_global https://gist.githubusercontent.com/octocat/9257657/raw/3f9569e65df83a7b328b39a091f0ce9c6efc6429/.gitignore

    # Add my rules
    {
        echo
        echo
        echo "# Personal exclusions #"
        echo "#######################"
        echo "out/"
        echo "*.ko"
        echo "Image.*"
        echo "zImage*"
        echo "dtbo*"
        echo "net/wireguard"
        echo "*.rej"
    } >>"${HOME}"/.gitignore_global
); }

# Grab linux, linux-next, and linux-stable for CBL
# https://www.kernel.org/cloning-linux-from-a-bundle.html
function cbl_linux_repos() { (
    : "${CBL_B:=${CBL:-${HOME}/cbl}/build}" "${CBL_M:=${CBL:-${HOME}/cbl}/mirrors}" "${CBL_S:=${CBL:-${HOME}/cbl}/src}"

    while ((${#})); do
        case ${1} in
            linux)
                PAIRS=(
                    "torvalds/linux.git:${CBL_B}/clean/linux"
                    "torvalds/linux.git:${CBL_B}/patched/linux"
                    "torvalds/linux.git:${CBL_M}/linux"
                    "torvalds/linux.git:${CBL_S}/linux"
                )
                ;;
            linux-next)
                PAIRS=(
                    "next/linux-next.git:${CBL_B}/clean/linux-next"
                    "next/linux-next.git:${CBL_B}/patched/linux-next"
                    "next/linux-next.git:${CBL_B}/rpi"
                    "next/linux-next.git:${CBL_S}/linux-next"
                )
                ;;
            linux-stable)
                PAIRS=(
                    "stable/linux.git:${CBL_B}/clean/linux-stable-5.4"
                    "stable/linux.git:${CBL_B}/clean/linux-stable-5.10"
                    "stable/linux.git:${CBL_B}/patched/linux-stable-5.4"
                    "stable/linux.git:${CBL_B}/patched/linux-stable-5.10"
                    "stable/linux.git:${CBL_S}/linux-stable"
                )
                ;;
            *) return 1 ;;
        esac
        shift
    done

    cd "$(mktemp -d)" || die "wtf"
    for PAIR in "${PAIRS[@]}"; do
        FOLDER=${PAIR#*:}
        URL=${PAIR%:*}
        CB=clone.bundle-${FOLDER##*/}
        [[ -d ${FOLDER} ]] && continue
        [[ ! -f ${CB} ]] && wget -O "${CB}" -c https://git.kernel.org/pub/scm/linux/kernel/git/"${URL}"/clone.bundle
        git clone "${CB}" "${FOLDER}"
        (
            cd "${FOLDER}" || die "${FOLDER} does not exist"
            git remote remove origin
            git remote add origin https://git.kernel.org/pub/scm/linux/kernel/git/"${URL}"
            git remote update origin
            case ${FOLDER} in
                *linux-stable-*) BRANCH=linux-${FOLDER##*-}.y ;;
                *) BRANCH=master ;;
            esac
            git checkout "${BRANCH}"
            if [[ ${FOLDER##*/} = "rpi" ]]; then
                source "${SCRIPTS_FOLDER:-${HOME}/github/scripts}"/common || exit ${?}
                git_remote_add -f --tags mainline https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
                git_remote_add -f sami https://github.com/samitolvanen/linux
                git config rerere.enabled true
            else
                git branch --set-upstream-to=origin/"${BRANCH}" "${BRANCH}"
                git reset --hard origin/"${BRANCH}"
            fi
            [[ ${FOLDER} =~ mirrors ]] && git remote add github git@github.com:ClangBuiltLinux/linux.git
            [[ ${FOLDER} =~ ${CBL_B}/patched/linux-stable ]] && git remote add stable-rc https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git/
        )
    done
    rm -rf "${PWD}"
); }

# Download Android CBL repos
function cbl_android_repos() { (
    cd "${CBL_A_R:=${CBL:-${HOME}/cbl}}"/android || die "wtf"
    [[ -d android-kernel-clang ]] || git clone git@github.com:nathanchance/android-kernel-clang.git
    mkdir -p common
    cd common || die "wtf"
    PATH=${HOME}/usr/bin:${PATH} repo --color=auto init -u https://android.googlesource.com/kernel/manifest -b common-android-multi
    PATH=${HOME}/usr/bin:${PATH} repo --color=auto sync
    curl -LSso common/.git/hooks/commit-msg https://android-review.googlesource.com/tools/hooks/commit-msg
    chmod u+x common/.git/hooks/commit-msg

    CTTLFSH=${CBL_A_R}/android/cuttlefish
    rm -rf "${CTTLFSH}"
    mkdir -p "${CTTLFSH}"
    cd "${CTTLFSH}" || die "wtf"
    "${SCRIPTS_FOLDER:-${HOME}/github/scripts}"/workstation/download-aosp.sh x86_64
); }

# Download other CBL things
function cbl_other_repos() { (
    source "${SCRIPTS_FOLDER:-${HOME}/github/scripts}"/common || exit ${?}

    cd "${CBL_O_R:=${CBL:-${HOME}/cbl}}"/github || die "wtf"
    for REPO in boot-utils continuous-integration2:ci tc-build qemu-binaries; do
        FOLDER=${REPO#*:}
        REPO=${REPO%:*}

        [[ -d ${FOLDER} ]] || git clone git@github.com:ClangBuiltLinux/"${REPO}".git "${FOLDER}"
        hub -C "${FOLDER}" fork
    done
    [[ -d yapf ]] || git clone https://github.com/google/yapf

    cd "${CBL_O_R}"/mirrors || die "wtf"
    [[ -d llvm ]] || git clone https://github.com/llvm/llvm-project llvm
    cd llvm || die "wtf"
    git_remote_add github git@github.com:ClangBuiltLinux/llvm-project.git

    cd "${CBL_O_R}" || die "wtf"
    [[ -d creduce-files ]] || git clone git@github.com:nathanchance/creduce-files.git
    [[ -d llvm-kernel-testing ]] || git clone git@github.com:nathanchance/llvm-kernel-testing.git
    [[ -d tc-build ]] || git clone -b personal git@github.com:nathanchance/tc-build.git

    cd "${CBL_O_R}"/build || die "wtf"
    [[ -d pi-scripts ]] || git clone git@github.com:nathanchance/pi-scripts
    [[ -d wsl2 ]] || git clone git@github.com:nathanchance/WSL2-Linux-Kernel wsl2

    cd "${CBL_O_R}"/build/wsl2 || die "wtf"
    git_remote_add -f --tags mainline https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
    git_remote_add -f --tags next https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
    git_remote_add -f --tags microsoft https://github.com/microsoft/WSL2-Linux-Kernel
    git_remote_add -f sami https://github.com/samitolvanen/linux
    git config rerere.enabled true
    git config status.aheadBehind false

    cd "${CBL_O_R}"/src || die "wtf"
    [[ -d korg-linux ]] && git clone git@gitolite.kernel.org:pub/scm/linux/kernel/git/nathan/linux korg-linux

    cd "${CBL_O_R}"/src/korg-linux || exit ${?}
    git_remote_add -f linus https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/
    git_remote_add -f --no-tags next https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git/

    CBL_O_R_QEMU=${CBL_O_R}/qemu
    mkdir -p "${CBL_O_R_QEMU}"/{bin,install,src}
    cd "${CBL_O_R_QEMU}"/src || die "wtf"
    [[ -d qemu-5.0.1 ]] || curl -LSs https://download.qemu.org/qemu-5.0.1.tar.xz | tar -xJf -
    [[ -d qemu ]] || git clone -j"$(nproc)" --recurse-submodules https://gitlab.com/qemu-project/qemu.git
); }
# vi: filetype=zsh
