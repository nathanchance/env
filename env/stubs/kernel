#!/usr/bin/env bash
# SPDX-License-Identifier: MIT
#
# Shebang is purely for syntax highlighting and shellcheck auditing; script must be sourced to be useful
#
# Copyright (C) 2021 Nathan Chancellor
#
# Functions used to assist with upstream kernel development

# checkpatch.pl shorthand
function chp() { (
    [[ -x scripts/checkpatch.pl ]] || die "checkpatch.pl does not exist"
    scripts/checkpatch.pl "${@}"
); }

# Grab an thread as an mbox file with b4
function gmbx() { (
    command -v b4 &>/dev/null || die "b4 needs to be installed"

    MSG_ID=${1:?}
    MBOX=$(mktemp --suffix=.mbox)

    set -x

    b4 mbox -n "${MBOX}" "${MSG_ID}" || exit ${?}
    mutt -f "${MBOX}"
    rm "${MBOX}"
); }

# get_maintainer.pl shorthand
# SC2120: gtm references arguments, but none are ever passed.
# shellcheck disable=SC2120
function gtm() { (
    [[ -x scripts/get_maintainer.pl ]] || die "get_maintainer.pl does not exist"
    scripts/get_maintainer.pl --scm "${@}"
); }

# Check if we are in a kernel tree or not
function in_kernel_tree() {
    [[ -f Makefile ]] || die "You do not appear to be in a kernel tree"
}

# Patch check function
function pch() { (
    in_kernel_tree

    REV=${1}
    [[ -z ${REV} ]] && REV=HEAD~1..HEAD

    for SHA in $(git log --format=%H --no-merges --reverse "${REV}"); do
        TITLE="Commit $(git kf "${SHA}")"
        HEADER=$(for _ in $(seq ${#TITLE}); do printf '-'; done)
        printf "\n%s\n%s\n%s\n\n" "${HEADER}" "${TITLE}" "${HEADER}"
        chp -g "${SHA}"
        # SC2119: Use gtm "$@" if function's $1 should mean script's $1.
        # shellcheck disable=SC2119
        git fp -1 --stdout "${SHA}" | gtm
    done
); }

# Quilt-like patch management function for Linux
function ptchmn() { (
    in_kernel_tree

    REPO=${PWD##*/}
    TARGET_FOLDER=${GITHUB_FOLDER}/patches/${REPO}/$(git cb)
    [[ ! -d ${TARGET_FOLDER} ]] && die "${TARGET_FOLDER} doesn't exist!"

    case "${1:?}" in
        -s | --sync)
            case ${REPO} in
                linux | linux-next | linux-stable-5.4 | linux-stable-5.10 | linux-stable-5.11) ;;
                *) die "${REPO} not supported by ptchmn!" ;;
            esac

            FIRST_HASH=$(git mfc)
            [[ -z ${FIRST_HASH} ]] && die "FIRST_HASH is empty...?"

            rm "${TARGET_FOLDER}"/*

            git fp -o "${TARGET_FOLDER}" --base="${FIRST_HASH}^" "${FIRST_HASH}"^..HEAD

            git -C "${TARGET_FOLDER}" aa

            git -C "${TARGET_FOLDER}" c -m "patches: ${REPO}: $(git cb): Sync as of $(git sh -s --format=%h)"

            git -C "${TARGET_FOLDER}" push
            ;;

        -a | --apply)
            git am "${TARGET_FOLDER}"/*
            ;;
    esac
); }

# Rebase a linux-next branch
function rbln() { (
    in_kernel_tree

    FIRST_HASH=$(git mfc)
    SECOND_HASH=$(git show -s --format=%H "$(git cb)")
    git rh origin/master
    git cherry-pick --gpg-sign "${FIRST_HASH}^..${SECOND_HASH}"
); }

# Rebase Raspberry Pi kernel
function rbpi() { (
    PI_SRC=${CBL_BLD:?}/rpi

    set -x

    cd "${PI_SRC}" || exit ${?}
    git ru || exit ${?}
    git rh origin/master
    PATCHES_FOLDER=${GITHUB_FOLDER}/patches/rpi-next
    FIXES=${PATCHES_FOLDER}/fixes.series
    [[ -f ${FIXES} ]] && { git am "${FIXES}" || exit ${?}; }
    git b4 ams 20210414000803.662534-1-nathan@kernel.org || exit ${?}
    git b4 ams 20210325185749.27984-1-nsaenz@kernel.org || exit ${?}
    git b4 ams 20210408194458.501617-1-nathan@kernel.org || exit ${?}
    git b4 ams 20210410011901.1735866-1-dmitry.baryshkov@linaro.org || exit ${?}
    git b4 ams 20210414105858.1937710-1-perex@perex.cz || exit ${?}
    cat <<'EOF' | git am || exit ${?}
From 60406b41537c712881e6fce906a62eb5e8c75e05 Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <nathan@kernel.org>
Date: Wed, 14 Apr 2021 09:29:10 -0700
Subject: [PATCH] net: ethernet: ravb: Do not use priv uninitialized

Fixes: 8ef7adc6beb2 ("net: ethernet: ravb: Enable optional refclk")
Link: https://lore.kernel.org/r/CAHCN7xKp1Lp+KAHwo_GobZoDKQCV9_7Yx2ZNKmTzkkShRBzm_Q@mail.gmail.com/
Signed-off-by: Nathan Chancellor <nathan@kernel.org>
---
 drivers/net/ethernet/renesas/ravb_main.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/renesas/ravb_main.c b/drivers/net/ethernet/renesas/ravb_main.c
index 1409ae986aa2..b11d62a31f03 100644
--- a/drivers/net/ethernet/renesas/ravb_main.c
+++ b/drivers/net/ethernet/renesas/ravb_main.c
@@ -2085,7 +2085,7 @@ static int ravb_probe(struct platform_device *pdev)
 		irq = platform_get_irq(pdev, 0);
 	if (irq < 0) {
 		error = irq;
-		goto out_release;
+		goto out_release_no_priv;
 	}
 	ndev->irq = irq;
 
@@ -2252,6 +2252,7 @@ static int ravb_probe(struct platform_device *pdev)
 		ravb_ptp_stop(ndev);
 out_release:
 	clk_disable_unprepare(priv->refclk);
+out_release_no_priv:
 	free_netdev(ndev);
 
 	pm_runtime_put(&pdev->dev);
-- 
2.31.1.272.g89b43f80a5

EOF
    cat <<'EOF' | git am || exit ${?}
From 5953ff697d76c1863dc309778d47f37c8fd3f880 Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <nathan@kernel.org>
Date: Tue, 13 Apr 2021 14:47:48 -0700
Subject: [PATCH] drm/msm/dsi: Avoid clang -Wconstant-conversion warning

Signed-off-by: Nathan Chancellor <nathan@kernel.org>
---
 drivers/gpu/drm/msm/dsi/phy/dsi_phy_7nm.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/msm/dsi/phy/dsi_phy_7nm.c b/drivers/gpu/drm/msm/dsi/phy/dsi_phy_7nm.c
index e76ce40a12ab..1c1b4b7c4260 100644
--- a/drivers/gpu/drm/msm/dsi/phy/dsi_phy_7nm.c
+++ b/drivers/gpu/drm/msm/dsi/phy/dsi_phy_7nm.c
@@ -972,7 +972,7 @@ const struct msm_dsi_phy_cfg dsi_phy_7nm_cfgs = {
 		.restore_pll_state = dsi_7nm_pll_restore_state,
 	},
 	.min_pll_rate = 600000000UL,
-	.max_pll_rate = (5000000000ULL < ULONG_MAX) ? 5000000000ULL : ULONG_MAX,
+	.max_pll_rate = ((unsigned long)5000000000ULL < ULONG_MAX) ? (unsigned long)5000000000ULL : ULONG_MAX,
 	.io_start = { 0xae94400, 0xae96400 },
 	.num_dsi_phy = 2,
 	.quirks = DSI_PHY_7NM_QUIRK_V4_1,
-- 
2.31.1.272.g89b43f80a5

EOF
    cat <<'EOF' | git am || exit ${?}
From 609fcdf28ff4fcba5e4f500e420b32a8bed958cd Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <nathan@kernel.org>
Date: Thu, 15 Apr 2021 09:10:12 -0700
Subject: [PATCH] net: stmmac: Remove unused dma_recycle_rx_skbufs()

Link: https://lore.kernel.org/r/DM6PR11MB2780C0D45E70297CC5CE5423CA4D9@DM6PR11MB2780.namprd11.prod.outlook.com/
Signed-off-by: Nathan Chancellor <nathan@kernel.org>
---
 .../net/ethernet/stmicro/stmmac/stmmac_main.c | 25 -------------------
 1 file changed, 25 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index a8b6f66a68a1..9f396648d76f 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -1557,31 +1557,6 @@ static int stmmac_alloc_rx_buffers(struct stmmac_priv *priv, u32 queue,
 	return 0;
 }
 
-/**
- * dma_recycle_rx_skbufs - recycle RX dma buffers
- * @priv: private structure
- * @queue: RX queue index
- */
-static void dma_recycle_rx_skbufs(struct stmmac_priv *priv, u32 queue)
-{
-	struct stmmac_rx_queue *rx_q = &priv->rx_queue[queue];
-	int i;
-
-	for (i = 0; i < priv->dma_rx_size; i++) {
-		struct stmmac_rx_buffer *buf = &rx_q->buf_pool[i];
-
-		if (buf->page) {
-			page_pool_recycle_direct(rx_q->page_pool, buf->page);
-			buf->page = NULL;
-		}
-
-		if (priv->sph && buf->sec_page) {
-			page_pool_recycle_direct(rx_q->page_pool, buf->sec_page);
-			buf->sec_page = NULL;
-		}
-	}
-}
-
 /**
  * dma_free_rx_xskbufs - free RX dma buffers from XSK pool
  * @priv: private structure
-- 
2.31.1.272.g89b43f80a5

EOF
    for SHA in 358afb8b746d4a7ebaeeeaab7a1523895a8572c2 4564363351e2680e55edc23c7953aebd2acb4ab7; do
        git fp -1 --stdout "${SHA}" arch/arm/boot/dts/bcm2711-rpi-4-b.dts | git ap -R || exit ${?}
    done
    git ac -m "ARM: dts: bcm2711: Disable the display pipeline"
    ../pi-scripts/build.sh ARCH=arm || exit ${?}
    ../pi-scripts/build.sh ARCH=arm64 || exit ${?}
    if ! git pll --no-edit mainline master; then
        rg "<<<<<<< HEAD" && exit ${?}
        ../pi-scripts/build.sh ARCH=arm || exit ${?}
        ../pi-scripts/build.sh ARCH=arm64 || exit ${?}
        git aa
        git c || exit ${?}
    fi
    if ! git pll --no-edit sami clang-cfi; then
        rg "<<<<<<< HEAD" && exit ${?}
        ../pi-scripts/build.sh ARCH=arm || exit ${?}
        ../pi-scripts/build.sh ARCH=arm64 || exit ${?}
        git aa
        git c --no-edit || exit ${?}
    fi
    ../pi-scripts/build.sh ARCH=arm || exit ${?}
    ../pi-scripts/build.sh ARCH=arm64 || exit ${?}
); }

# Update wsl2-kernel to latest -next
function rbwk() { (
    case ${LOCATION} in
        workstation) WSL2_KERNEL=${HOME}/cbl/build/wsl2 ;;
        wsl) WSL2_KERNEL=${HOME}/src/wsl2-kernel ;;
        *) die "rbwk() is not supported by ${LOCATION}" ;;
    esac

    set -x
    cd "${WSL2_KERNEL}" || exit ${?}
    git ru || exit ${?}
    for BRANCH in clearlinux-patchset microsoft-patchset; do
        git ch "${BRANCH}" || exit ${?}
        git rb -i next/master || exit ${?}
    done
    git ch next || exit ${?}
    git rh next/master
    if ! git pll --no-edit mainline master; then
        rg "<<<<<<< HEAD" && exit ${?}
        git aa
        git c || exit ${?}
    fi
    if ! git pll --no-edit sami clang-cfi; then
        rg "<<<<<<< HEAD" && exit ${?}
        git aa
        git c || exit ${?}
    fi
    git ml --no-edit clearlinux-patchset microsoft-patchset || exit ${?}
    git cp "$(git lo --merges -1 --format=%H origin/HEAD)".."$(git sh -s --format=%H origin/HEAD)"
); }
# vi: filetype=zsh
