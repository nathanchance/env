# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (C) 2018-2019 Nathan Chancellor
#
# Utility and terminal setup functions for Termux on Android


# Download files and set up environment
# Requires
# $ pkg install curl libcurl zsh && chsh -s zsh && echo "extra-keys = [['ESC','/','-','HOME','UP','END','PGUP'],['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN']]" > ~/.termux/termux.properties
# GPG and SSH keys to be available in the Downloads folder
function bootstrap() {(
    source <(curl -LSs https://github.com/nathanchance/scripts/raw/master/common) &>/dev/null || return 1

    pkg upgrade
    termux-setup-storage
    pkg install bison \
                clang \
                flex \
                git \
                gnupg \
                hub \
                jq \
                lld \
                llvm \
                make \
                mosh \
                mutt \
                openssl \
                ripgrep \
                tmux

    # Install ssh and gpg keys
    DOWNLOADS=${HOME}/storage/downloads
    mkdir -p "${HOME}"/.ssh
    cp -v "${DOWNLOADS}"/id_ed25519 "${HOME}"/.ssh
    chmod 600 "${HOME}"/.ssh/id_ed25519
    gpg --pinentry-mode loopback --import "${DOWNLOADS}"/{public*,private*}.asc || die "Error installing gpg keys!"
    gpg --import-ownertrust "${DOWNLOADS}"/ownertrust*.asc || die "Error installing gpg ownertrust!"
    {
        echo "default-cache-ttl 604800"
        echo "max-cache-ttl 2419200"
    } > "${HOME}"/.gnupg/gpg-agent.conf
    gpg-connect-agent reloadagent /bye

    # Downloads scripts
    git clone git@github.com:nathanchance/scripts
    source "${HOME}"/scripts/funcs/git && git_setup
    source "${HOME}"/scripts/funcs/pure && pure_prompt
    source "${HOME}"/scripts/env/setup && global_gitignore && create_zshrc

    # Download and install dotfiles
    DOTFILES=${HOME}/dotfiles
    git clone git@github.com:nathanchance/dotfiles
    (
        zsh "${DOTFILES}"/common/vim/vim_setup.sh
        cp -v "${DOTFILES}"/chromeos/.tmux.conf "${HOME}"
        gpg --pinentry-mode loopback --output "${HOME}"/.muttrc --decrypt "${DOTFILES}"/common/muttrc.gpg
    ) || die "Error installing dotfiles"
)}


# Android aliases
function android_aliases() {
    alias mshsvr='mosh nathan@${HETZNER_IP}'
    alias upd='pkg upgrade'
}


# Android environment setup
function android_setup() { true; }


# vi: filetype=zsh
