complete -c build-llvm.py -f -l assertions -d "Force enable assertions"
complete -c build-llvm.py -f -l bolt -d "Perform BOLT on final clang"
complete -c build-llvm.py -x -s b -l build-folder -d "Build folder" -a "(__fish_complete_directories)"
complete -c build-llvm.py -x -l build-targets -d "Targets to build"
complete -c build-llvm.py -f -l build-stage1-only -d "Build LLVM in one stage"
complete -c build-llvm.py -x -l build-type -d "Build type" -a "Debug Release RelWithDebInfo"
complete -c build-llvm.py -x -l check-targets -d "Targets to check"
complete -c build-llvm.py -x -s D -l defines -d "cmake defines"
complete -c build-llvm.py -f -s f -l full-toolchain -d "Don't slim down LLVM build"
complete -c build-llvm.py -x -s i -l install-folder -d "Install folder for toolchain" -a "(__fish_complete_directories)"
complete -c build-llvm.py -x -l install-targets -d "Targets to install"
complete -c build-llvm.py -x -s l -l llvm-folder -d "LLVM source folder" -a "(__fish_complete_directories)"
complete -c build-llvm.py -x -s L -l linux-folder -d "Linux source folder" -a "(__fish_complete_directories)"
complete -c build-llvm.py -x -l lto -d "Enable LTO" -a "full thin"
complete -c build-llvm.py -f -s n -l no-update -d "Do not update LLVM"
complete -c build-llvm.py -f -l no-ccache -d "Disable ccache"
complete -c build-llvm.py -x -s p -l projects -d "Projects to build"
set -l pgo_args kernel-{def,all{mod,yes}}config{,-slim} llvm
complete -c build-llvm.py -x -l pgo -d "Build final clang with PGO" -a "$pgo_args"
complete -c build-llvm.py -f -l quiet-cmake -d "Make cmake quieter"
complete -c build-llvm.py -x -s r -l ref -d "git reference to build from"
complete -c build-llvm.py -f -s s -l shallow-clone -d "Shallow clone LLVM repo"
complete -c build-llvm.py -f -l show-build-commands -d "Print build commands"
complete -c build-llvm.py -f -s t -l targets -d "Backends to enable"
complete -c build-llvm.py -f -l use-good-revision -d "Use known good revision of LLVM"
complete -c build-llvm.py -x -l vendor-string -d "Vendor string"
