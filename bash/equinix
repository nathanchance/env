#!/bin/bash
# SPDX-License-Identifier: MIT
#
# Copyright (C) 2021 Nathan Chancellor

function equinix_die() {
    printf '\n\033[01;31m%s\033[0m\n' "${1:?}"
    exit "${2:-33}"
}

function equinix_warn() {
    printf '\n\033[01;33m%s\033[0m\n' "${1:?}"
}

function partition_drive() { (
    # Function must be run as root
    [[ $(id -u) -ne 0 ]] && equinix_die "This function must be run as root."

    while ((${#})); do
        case ${1} in
            -d | --drive)
                shift
                DRIVE=${1}
                ;;
            -f | --folder)
                shift
                FOLDER=${1}
                ;;
            -u | --user)
                shift
                USER=${1}
                ;;
        esac
        shift
    done

    set -eux

    : "${DRIVE}" "${FOLDER}" "${USER}"

    case ${DRIVE} in
        /dev/nvme*) PART=p1 ;;
        /dev/sd*) PART=1 ;;
    esac
    VOLUME=${DRIVE}${PART}

    if mountpoint -q "${FOLDER}"; then
        set +x
        equinix_warn "${FOLDER} is mounted. If this is not expected, unmount it and re-run this function."
        equinix_warn "   $ umount ${FOLDER}"
        printf '\n'
        FORMAT=false
        set -x
    fi

    if blkid "${VOLUME}"; then
        set +x
        equinix_warn "${VOLUME} already exists. If this is not expected, wipe it and re-run this function."
        equinix_warn "   $ sed -i '/$(blkid -o value -s UUID "${VOLUME}")/d' /etc/fstab"
        equinix_warn "   $ dd if=/dev/zero of=${DRIVE} bs=8M count=125"
        printf '\n'
        FORMAT=false
        set -x
    fi

    # Partition and modify fstab if everything is fine
    if ${FORMAT:=true}; then
        parted -s "${DRIVE}" mklabel gpt mkpart primary ext4 '0%' '100%'
        sleep 15
        mkfs -t ext4 "${VOLUME}"
        printf 'UUID=%s\t%s\text4\tnoatime\t0\t2\n' "$(blkid -o value -s UUID "${VOLUME}")" "${FOLDER}" | tee -a /etc/fstab
        sed -i '/^$/d' /etc/fstab
        [[ ${FOLDER} != /home ]] && mkdir -p "${FOLDER}"
        mount -a
        [[ ${FOLDER} != /home ]] && chown -R "${USER}:${USER}" "${FOLDER}"
    fi

    return 0
); }

function partition_and_create_user() { (
    # Function must be run as root
    [[ $(id -u) -ne 0 ]] && equinix_die "This function must be run as root."

    # Drive to use must be provided as argument of script
    while ((${#})); do
        case ${1} in
            -d | --drive)
                shift
                DRIVE=${1}
                ;;
            -p | --password)
                shift
                PASSWORD=${1}
                ;;
            -u | --user)
                shift
                USER=${1}
                ;;
        esac
        shift
    done

    # Debug and error if a command fails
    set -eux

    # User and password must be supplied
    : "${USER}" "${PASSWORD}"

    # Figure out the package manager
    # shellcheck disable=SC1091
    source /usr/lib/os-release
    case $ID in
        rocky)
            admin_group=wheel
            pkg_mgr=dnf
            ;;
        debian | ubuntu)
            admin_group=sudo
            pkg_mgr=apt
            ;;
        *)
            equinix_die "Unsupported OS: $ID"
            ;;
    esac

    case $pkg_mgr in
        apt)
            # Always turn on '--no-install-recommends'
            apt-config dump | grep -we Recommends -e Suggests | sed 's/1/0/g' | tee /etc/apt/apt.conf.d/999norecommend

            # Update the server
            export APT_LISTCHANGES_FRONTEND=none
            export DEBIAN_FRONTEND=noninteractive
            export NEEDRESTART_SUSPEND=true

            apt update -y || exit ${?}

            apt upgrade \
                -o Dpkg::Options::='--force-confdef' \
                -o Dpkg::Options::='--force-confold' \
                -y || exit ${?}

            apt autoremove -y

            # Install tmux so that installation progress cannot be lost
            apt install -y tmux
            ;;
    esac

    # Install necessary files
    if [[ -n ${DRIVE:-} ]]; then
        if ! command -v parted; then
            "$pkg_mgr" install -y parted || exit
        fi
        partition_drive -d "${DRIVE}" -f /home -u "${USER}"
    fi

    # Setup user account
    case $pkg_mgr in
        apt) [[ "$(uname -m)" = "x86_64" ]] && apt install -y qemu-kvm ;;
    esac
    if getent passwd "${USER}" &>/dev/null; then
        set +x
        equinix_warn "${USER} already exists. If this is not expected, delete the user and re-run this function."
        equinix_warn "   $ userdel -f ${USER}"
        printf '\n'
        set -x
    else
        USER_ADD_ARGS=(-m -G "kvm,$admin_group")
        useradd "${USER_ADD_ARGS[@]}" "${USER}"
        echo "${USER}:${PASSWORD}" | chpasswd
        cp -rv /root/.ssh /home/"${USER}"
        chown -R "${USER}:${USER}" /home/"${USER}"/.ssh
    fi
    return 0
); }
