#!/usr/bin/env zsh

function reality_check() {
    if [[ $(id -un) != "nathan" ]]; then
        print_error "Not logged in as Nathan?"
        exit 1
    fi

    if [[ $(uname) != "Darwin" ]]; then
        print_error "Not installing on macOS?"
        exit 1
    fi
}

function setup_homebrew() {
    brew=/opt/homebrew/bin/brew
    if [[ ! -x $brew ]]; then
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" || exit
    fi
    eval "$($brew shellenv)" || exit
}

function install_packages() {
    # Core Formulae
    brew install \
        bat \
        fd \
        fish \
        fzf \
        gh \
        git \
        mosh \
        zoxide || exit

    # Iosevka and WezTerm nightly casks
    brew tap homebrew/cask-fonts || exit
    brew tap wez/wezterm || exit
    brew install \
        --cask \
        font-iosevka-ss08 \
        wez/wezterm/wezterm-nightly || exit
}

function setup_gh() {
    if ! gh auth status; then
        gh auth login || exit
        first_time_gh=true
    fi
}

function setup_ssh() {
    ssh_key=$HOME/.ssh/id_ed25519
    if [[ ! -f $ssh_key ]]; then
        mkdir -p "$(dirname "$ssh_key")"

        keys=/tmp/keys
        if [[ ! -d $keys ]]; then
            git clone https://github.com/nathanchance/keys $keys || exit
        fi

        keys_ssh=$keys/ssh
        cp -v $keys_ssh/"$(basename "$ssh_key")"{,.pub} "$(dirname "$ssh_key")"
        chmod 600 "$ssh_key"

        rm -fr "$keys"
    fi

    if ! ssh-add -l; then
        ssh-add "$ssh_key" || exit
    fi

    if [[ $first_time_gh = "true" ]]; then
        gh config set -h github.com git_protocol ssh
        gh config set git_protocol ssh
        rm -fr "$HOME"/.gitconfig
    fi
}

function clone_env_plugins() {
    github_folder=$HOME/Dev/github
    env_folder=$github_folder/env
    if [[ ! -d $env_folder ]]; then
        mkdir -p "$(dirname "$env_folder")"
        gh repo clone "$(basename "$env_folder")" "$env_folder" || exit
    fi
    git -C "$env_folder" pull

    forked_fisher_plugins=(
        "$github_folder"/forgit
        "$github_folder"/hydro
    )
    for forked_fisher_plugin in "${forked_fisher_plugins[@]}"; do
        if [[ ! -d $forked_fisher_plugin ]]; then
            mkdir -p "$(dirname "$forked_fisher_plugin")"
            gh repo clone "$(basename "$forked_fisher_plugin")" "$forked_fisher_plugin" -- -b personal || exit
        fi
        git -C "$forked_fisher_plugin" remote update
    done
}

function ln_wezterm_cfg() {
    wezterm_cfg=$HOME/.config/wezterm/wezterm.lua
    if [[ ! -L $wezterm_cfg ]]; then
        rm -fr "$wezterm_cfg"
        mkdir -p "$(dirname "$wezterm_cfg")"
        ln -fsv "$env_folder"/configs/local/"$(basename "$wezterm_cfg")" "$wezterm_cfg"
    fi
}

function setup_fish_cfg() {
    fish_cfg=$HOME/.config/fish/config.fish
    if [[ ! -L $fish_cfg ]]; then
        rm -fr "$fish_cfg"
        mkdir -p "$(dirname "$fish_cfg")"
        cat <<'EOF' >"$fish_cfg"
# Start an ssh-agent
if not set -q SSH_AUTH_SOCK
    eval (ssh-agent -c)
end

# Set up user environment wrapper
function env_setup
    set -l github_folder $HOME/Dev/github
    set -l fisher_plugins \
        jorgebucaran/fisher \
        $github_folder/{env/fish,forgit,hydro} \
        PatrickF1/fzf.fish \
        jorgebucaran/autopair.fish

    curl -LSs https://git.io/fisher | source
    and fisher install $fisher_plugins

    set -l fish_cfg $__fish_config_dir/config.fish
    if not test -L $fish_cfg
        rm -fr $fish_cfg
        mkdir -p (dirname $fish_cfg)
        ln -fsv $github_folder/env/fish/config.fish $fish_cfg
    end

    git_setup
    vim_setup
end
EOF
    fi
}

reality_check
setup_homebrew
install_packages
setup_gh
setup_ssh
clone_env_plugins
ln_wezterm_cfg
setup_fish_cfg
